name: CI Checks - PR

on:
  pull_request_target

permissions:
  statuses: write
  checks: write
  contents: read

jobs:
  markdownlint:
    name: markdownlint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: MarkdownLint
        uses: nosborn/github-action-markdown-cli@v3.2.0
        with:
          files: ./output_queries/
          config_file: .markdownlint.yml
  shellcheck:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Run ShellCheck
        uses: ludeeus/action-shellcheck@1.1.0
  tests:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.9]
      fail-fast: false 
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Run image
        uses: abatilo/actions-poetry@v2.2.0
        with:
          poetry-version: 1.3.2
      - name: Setup netrc
        run: |-
          echo "machine github.com login $PAT password x-oauth-basic" > ~/.netrc
          chmod 600 ~/.netrc
        env:
          PAT: ${{ secrets.CONCOURSE_PAT }}
      - name: Install dependencies
        run: poetry install --without glue
      - name: run pytest
        run: poetry run pytest --tap-stream --cov-report=html --junitxml=junit.xml
      - name: Upload Test report
        uses: dorny/test-reporter@v1
        if: success() || failure()
        with:
          name: test-results
          path: junit.xml
          reporter: java-junit
          fail-on-error: false
      - name: upload-coverage-report
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: htmlcov/
          if-no-files-found: warn
  mypy:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.9]
      fail-fast: false 
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Run image
        uses: abatilo/actions-poetry@v2.2.0
        with:
          poetry-version: 1.3.2
      - name: Setup netrc
        run: |-
          echo "machine github.com login $PAT password x-oauth-basic" > ~/.netrc
          chmod 600 ~/.netrc
        env:
          PAT: ${{ secrets.CONCOURSE_PAT }}
      - name: Install dependencies
        run: poetry install --without glue
      - name: run mypy
        run: poetry run mypy
  flake8:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.9]
      fail-fast: false 
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Run image
        uses: abatilo/actions-poetry@v2.2.0
        with:
          poetry-version: 1.3.2
      - name: Setup netrc
        run: |-
          echo "machine github.com login $PAT password x-oauth-basic" > ~/.netrc
          chmod 600 ~/.netrc
        env:
          PAT: ${{ secrets.CONCOURSE_PAT }}
      - name: Install dependencies
        run: poetry install --without glue
      - name: run flake8
        run: poetry run flake8 .
  isort:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.9]
      fail-fast: false 
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Run image
        uses: abatilo/actions-poetry@v2.2.0
        with:
          poetry-version: 1.3.2
      - name: Setup netrc
        run: |-
          echo "machine github.com login $PAT password x-oauth-basic" > ~/.netrc
          chmod 600 ~/.netrc
        env:
          PAT: ${{ secrets.CONCOURSE_PAT }}
      - name: Install dependencies
        run: poetry install --without glue
      - name: run isort
        run: poetry run isort --check-only .
  black:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.9]
      fail-fast: false 
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Run image
        uses: abatilo/actions-poetry@v2.2.0
        with:
          poetry-version: 1.3.2
      - name: Setup netrc
        run: |-
          echo "machine github.com login $PAT password x-oauth-basic" > ~/.netrc
          chmod 600 ~/.netrc
        env:
          PAT: ${{ secrets.CONCOURSE_PAT }}
      - name: Install dependencies
        run: poetry install --without glue
      - name: run black
        run: poetry run black --check --diff .
  terraform-fmt-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.3.4
      - id: check
        run: terraform fmt -recursive -check -diff conf/terraform/
  bandit:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.9]
      fail-fast: false 
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Run image
        uses: abatilo/actions-poetry@v2.2.0
        with:
          poetry-version: 1.3.2
      - name: Setup netrc
        run: |-
          echo "machine github.com login $PAT password x-oauth-basic" > ~/.netrc
          chmod 600 ~/.netrc
        env:
          PAT: ${{ secrets.CONCOURSE_PAT }}
      - name: Install dependencies
        run: poetry install --without glue
      - name: run bandit
        run: poetry run bandit -r queuing_lambda glue_scripts dashboarding notification_event_proxy_lambda
